FORMAT: 1A
HOST: https://testapi.prioticket.com/s1

# PrioTicket Redeem API

## Interface Specification

> Version: "B.2.3"
<img src="https://travis-ci.org/RaoulvanWoerkom/PrioTicketVenueAPI.svg?branch=master" alt="Build_Status">

### Description

This document describes the interface between Prioticket systems and a Venue application. 

The API supports the following process:

+ Guests of Prioticket.com and its distribution partners can access museums and attractions (Venues) with an activated “pass_code”;
+ Upon Venue entry, the Venue’s scanner device scans a QR code. The Pass Code message starts with an unique domain name pattern. After recognizing the unique domain name pattern the Venue application will initiate a request to the Prioticket system to check if the unique Pass Code is valid;
+ In the response message Prioticket will send the status of the Pass Code (success/denied). If the Pass Code is accepted, the response message will also contain the related transaction details;
+ After successful receipt of the transaction information, the Venue will update their system with the transaction details and charge the ticket price to a Prioticket Account;
+ Prioticket will send a monthly report to the Venue with an overview of transactions and a tax invoice to settle the outstanding ticket payment.

The proceeding of this document describes the “Check Pass Code” method for integrating with the Prioticket system.

## Check Pass Code

Upon scan of a Pass Code by the Venue scanner, the Venue application will initiate an API request to the Prioticket system to get the status and transaction details from the Prioticket system.

Receiver = Prioticket

Initiator = Venue

The request data will be accepted in JSON format only and response data will also be in JSON format.
+ Test URL: https://testapi.prioticket.com/s1/check_passcode
+ Live URL: https://api.prioticket.com/s1/check_passcode

## Endpoints [/check_passcode]

### Check Passcode [POST]
Header: Initiator should send a “token” in the header of the message. The token is used for validation and to identify the partner. 

The token = Alphanumeric, 17 characters and would be in format (XXX-XXXX-XXXX-XXX). We will sent the token of the TEST and the LIVE environment in a separate emails.

+ Request (application/json)

    + Headers
    
                TOKEN : 5M1-T2T3-Y5N7-Q2S
                
    + Attributes
    
        + `version`: `B.2.3` (string, required)
        + `pass_code`: `http://qb.vg/0t-yfh` (string, required) - `Full details of the scanned code.`
        Generated by Prioticket. Unique for each ticket. e.g. (http://qu.mu/AAA222)
        + `venue_id`: `35` (number, required) - `Unique id of the venue where the pass is scanned.`
        + `location_id`: `2` (string, optional) - `An venue can have multiple locations. The ticket can depend on this location.` 
        If location_id is left blank, the default location will be used to validate the pass_code.
        + `transaction_ref`: `123` (string, optional) - `This is a transaction reference from the Venue that will be stored in Prioticket database for future use if needed and will be returned in the response message.`
           
+ Response 200 (application/json)

    
    + Attributes
    
        + `response_code`: `1` (number)
        + `message`: `success` (string)
        + `transaction_id`: `310065` (number)
        + `pass_code`: `0t-yfh` (string)
        + `currency`: `EUR` (string)
        + `distributor_ref`: `150` (string)
        + `venue_id`: `35` (number)
        + `venue_name`: `Van Gogh Museum` (string)
        + `entrance_date_time`: `2016-12-07T12:04:27` (string)
        + `total_amount`: `65` (number)
        + `transaction_ref`: `` (string)
        + `transaction_type`: `Direct` (string)
        + `ticket_info` (object)
            + `location_id`: `` (string)
            + `ticket_id`: `96` (number)
            + `ticket_name`: `Van Gogh Museum Entry with Voucher Lane Access` (string)
            + `ticket_plu`: `101` (number)
            + `ticket_ref`: `` (string)
            + `reservation`: `0` (number)
            + `reservation_id`: `0` (number)
            + `reservation_ref`: `` (string)
            + `valid_from`: `` (string)
            + `valid_till`: `` (string)
            + `number_of_users`: `6` (number)
            + `user_info` (object)
                + `ticket_type_id`: `1` (number)
                + `ticket_type_tag`: `Adult` (string)
                + `ticket_type_ref`: `` (string)
                + `user_age_group`: `18-99` (string)
                + `price_per_ticket`: `15` (number)
                + `tax_percentage`: `6` (number)
                + `tax_per_ticket`: `0.85` (number)
                + `ticket_type_option` (object)
                    + `tto_id`: `0` (number)
                    + `tto_ref`: `` (string)
                    + `tto_price`: `0` (number)
                    + `tto_tax_percentage`: `0` (number)
                    + `tto_tax_amount`: `0` (number)